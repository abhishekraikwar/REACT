{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\reactjs\\\\Foodorder\\\\src\\\\components\\\\Meals\\\\AvailableMeals.js\",\n    _s = $RefreshSig$();\n\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useState } from 'react';\nimport { useCallback } from 'react';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DUMMY_MEALS = [{\n  id: 'm1',\n  name: 'Sushi',\n  description: 'Finest fish and veggies',\n  price: 22.99\n}, {\n  id: 'm2',\n  name: 'Schnitzel',\n  description: 'A german specialty!',\n  price: 16.5\n}, {\n  id: 'm3',\n  name: 'Barbecue Burger',\n  description: 'American, raw, meaty',\n  price: 12.99\n}, {\n  id: 'm4',\n  name: 'Green Bowl',\n  description: 'Healthy...and green...',\n  price: 18.99\n}];\n\nconst AvailableMeals = () => {\n  _s();\n\n  const [meals, setMeals] = useState([]);\n  const [error, setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const fetchMealsHandler = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      const response = await fetch('https://react-http-80acb-default-rtdb.firebaseio.com/meals');\n\n      if (!response.ok) {\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n      const loadedMeals = [];\n\n      for (const key in data) {\n        loadedMeals.push({\n          id: key,\n          name: data[key].name,\n          description: data[key].description,\n          price: data[key].price\n        });\n      }\n\n      setMeals(loadedMeals);\n    } catch (error) {\n      setError(error.message);\n    }\n\n    setLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchMealsHandler();\n  }, [fetchMealsHandler]);\n\n  let mealsList = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Found no movies\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 19\n  }, this);\n\n  if (meals.length > 0) {\n    mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n      id: meal.id,\n      name: meal.name,\n      description: meal.description,\n      price: meal.price\n    }, meal.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 5\n    }, this));\n  }\n\n  if (error) {\n    mealsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }, this);\n  }\n\n  if (loading) {\n    mealsList = /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AvailableMeals, \"fsOCF2WpPq2hFUi3iq8X+bGne4Y=\");\n\n_c = AvailableMeals;\nexport default AvailableMeals;\n\nvar _c;\n\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"sources":["D:/dev/reactjs/Foodorder/src/components/Meals/AvailableMeals.js"],"names":["Card","MealItem","classes","useState","useCallback","useEffect","DUMMY_MEALS","id","name","description","price","AvailableMeals","meals","setMeals","error","setError","loading","setLoading","fetchMealsHandler","response","fetch","ok","Error","data","json","loadedMeals","key","push","message","mealsList","length","map","meal"],"mappings":"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","sourcesContent":["import Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport classes from './AvailableMeals.module.css';\nimport { useState } from 'react';\nimport { useCallback} from 'react';\nimport { useEffect } from 'react';\nconst DUMMY_MEALS = [\n  {\n    id: 'm1',\n    name: 'Sushi',\n    description: 'Finest fish and veggies',\n    price: 22.99,\n  },\n  {\n    id: 'm2',\n    name: 'Schnitzel',\n    description: 'A german specialty!',\n    price: 16.5,\n  },\n  {\n    id: 'm3',\n    name: 'Barbecue Burger',\n    description: 'American, raw, meaty',\n    price: 12.99,\n  },\n  {\n    id: 'm4',\n    name: 'Green Bowl',\n    description: 'Healthy...and green...',\n    price: 18.99,\n  },\n];\n\n\nconst AvailableMeals = () => {\n  const [meals,setMeals] = useState([]);\n  const [error,setError] = useState(null);\n  const [loading, setLoading] = useState(false);\n\n  const fetchMealsHandler = useCallback(async () =>{\n    setLoading(true);\n    setError(null);\n\n    try{\n      const response = await fetch('https://react-http-80acb-default-rtdb.firebaseio.com/meals');\n      if(!response.ok){\n        throw new Error(\"Something went wrong!\");\n      }\n\n      const data = await response.json();\n\n      const loadedMeals = [];\n\n      for (const key in data){\n        loadedMeals.push({\n          id:key,\n          name:data[key].name,\n          description:data[key].description,\n          price:data[key].price,\n        })\n      }\n\n      setMeals(loadedMeals);\n    }\n    catch(error){\n      setError(error.message);\n    }\n    setLoading(false);\n\n  },[]);\n\n  useEffect(() =>{\n    fetchMealsHandler();\n  },[fetchMealsHandler]);\n\n\n  let mealsList = <p>Found no movies</p>\n  if (meals.length>0){\n  mealsList = meals.map((meal) => (\n    <MealItem\n      key={meal.id}\n      id={meal.id}\n      name={meal.name}\n      description={meal.description}\n      price={meal.price}\n    />\n  ));\n}\nif (error){\n  mealsList = <p>{error}</p>\n}\n\nif(loading){\n  mealsList = <p>Loading...</p>\n}\n\n  return (\n    <section className={classes.meals}>\n      <Card>\n        <ul>{mealsList}</ul>\n      </Card>\n    </section>\n  );\n};\n\nexport default AvailableMeals;\n"]},"metadata":{},"sourceType":"module"}