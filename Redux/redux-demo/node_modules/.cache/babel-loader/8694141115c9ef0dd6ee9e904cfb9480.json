{"ast":null,"code":"import { createSlice, configureStore } from \"@reduxjs/toolkit\";\nconst initialCounterState = {\n  counter: 0,\n  showCounter: true\n};\nconst counterSlice = createSlice({\n  name: \"Counter\",\n  initialState: initialCounterState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.payload;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\nconst initialAuthState = {\n  isAuthenticated: false\n};\nconst authSlice = createSlice({\n  name: 'Authenticate',\n  initialState: initialAuthState,\n  reducers: {\n    login(state) {\n      state.isAuthenticated = true;\n    },\n\n    logout(state) {\n      state.isAuthenticated = false;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    counter: counterSlice.reducer,\n    auth: authSlice.reducer\n  }\n});\nexport const counterActions = counterSlice.actions;\nexport default store; // const counterSubscriber = () =>{\n//     const latestState = store.getState();\n//     console.log(latestState);\n// }\n// store.subscribe(counterSubscriber);\n// store.dispatch({action:'increment'});\n// store.dispatch({action:'decrement'});","map":{"version":3,"sources":["D:/dev/reactjs/Redux/redux-demo/src/store/index.js"],"names":["createSlice","configureStore","initialCounterState","counter","showCounter","counterSlice","name","initialState","reducers","increment","state","increase","action","payload","decrement","toggle","initialAuthState","isAuthenticated","authSlice","login","logout","store","reducer","auth","counterActions","actions"],"mappings":"AACA,SAASA,WAAT,EAAsBC,cAAtB,QAA4C,kBAA5C;AAEA,MAAMC,mBAAmB,GAAG;AAAEC,EAAAA,OAAO,EAAE,CAAX;AAAcC,EAAAA,WAAW,EAAE;AAA3B,CAA5B;AAEA,MAAMC,YAAY,GAAGL,WAAW,CAAC;AAC/BM,EAAAA,IAAI,EAAE,SADyB;AAE/BC,EAAAA,YAAY,EAAEL,mBAFiB;AAG/BM,EAAAA,QAAQ,EAAE;AACRC,IAAAA,SAAS,CAACC,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KAHO;;AAIRQ,IAAAA,QAAQ,CAACD,KAAD,EAAQE,MAAR,EAAgB;AACtBF,MAAAA,KAAK,CAACP,OAAN,GAAgBO,KAAK,CAACP,OAAN,GAAgBS,MAAM,CAACC,OAAvC;AACD,KANO;;AAORC,IAAAA,SAAS,CAACJ,KAAD,EAAQ;AACfA,MAAAA,KAAK,CAACP,OAAN;AACD,KATO;;AAURY,IAAAA,MAAM,CAACL,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACN,WAAN,GAAoB,CAACM,KAAK,CAACN,WAA3B;AACD;;AAZO;AAHqB,CAAD,CAAhC;AAmBA,MAAMY,gBAAgB,GAAG;AACrBC,EAAAA,eAAe,EAAC;AADK,CAAzB;AAIA,MAAMC,SAAS,GAAGlB,WAAW,CAAC;AAC1BM,EAAAA,IAAI,EAAC,cADqB;AAE1BC,EAAAA,YAAY,EAACS,gBAFa;AAG1BR,EAAAA,QAAQ,EAAC;AACLW,IAAAA,KAAK,CAACT,KAAD,EAAO;AACRA,MAAAA,KAAK,CAACO,eAAN,GAAwB,IAAxB;AACH,KAHI;;AAILG,IAAAA,MAAM,CAACV,KAAD,EAAO;AACTA,MAAAA,KAAK,CAACO,eAAN,GAAwB,KAAxB;AACH;;AANI;AAHiB,CAAD,CAA7B;AAkBA,MAAMI,KAAK,GAAGpB,cAAc,CAAC;AACzBqB,EAAAA,OAAO,EAAC;AAACnB,IAAAA,OAAO,EAACE,YAAY,CAACiB,OAAtB;AAA+BC,IAAAA,IAAI,EAACL,SAAS,CAACI;AAA9C;AADiB,CAAD,CAA5B;AAIA,OAAO,MAAME,cAAc,GAAGnB,YAAY,CAACoB,OAApC;AAEP,eAAeJ,KAAf,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["\r\nimport { createSlice, configureStore } from \"@reduxjs/toolkit\";\r\n\r\nconst initialCounterState = { counter: 0, showCounter: true };\r\n\r\nconst counterSlice = createSlice({\r\n  name: \"Counter\",\r\n  initialState: initialCounterState,\r\n  reducers: {\r\n    increment(state) {\r\n      state.counter++;\r\n    },\r\n    increase(state, action) {\r\n      state.counter = state.counter + action.payload;\r\n    },\r\n    decrement(state) {\r\n      state.counter--;\r\n    },\r\n    toggle(state) {\r\n      state.showCounter = !state.showCounter;\r\n    },\r\n  },\r\n});\r\n\r\nconst initialAuthState = {\r\n    isAuthenticated:false\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name:'Authenticate',\r\n    initialState:initialAuthState,\r\n    reducers:{\r\n        login(state){\r\n            state.isAuthenticated = true;\r\n        },\r\n        logout(state){\r\n            state.isAuthenticated = false;\r\n        }\r\n\r\n\r\n\r\n    }\r\n})\r\n\r\n\r\n\r\nconst store = configureStore({\r\n    reducer:{counter:counterSlice.reducer, auth:authSlice.reducer}\r\n});\r\n\r\nexport const counterActions = counterSlice.actions;\r\n\r\nexport default store;\r\n\r\n// const counterSubscriber = () =>{\r\n//     const latestState = store.getState();\r\n//     console.log(latestState);\r\n// }\r\n\r\n// store.subscribe(counterSubscriber);\r\n\r\n// store.dispatch({action:'increment'});\r\n// store.dispatch({action:'decrement'});\r\n"]},"metadata":{},"sourceType":"module"}