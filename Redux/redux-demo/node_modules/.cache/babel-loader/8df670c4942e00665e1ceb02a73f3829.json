{"ast":null,"code":"import { createStore } from 'redux';\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    counter: 0\n  };\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store; // const counterSubscriber = () =>{\n//     const latestState = store.getState();\n//     console.log(latestState);\n// }\n// store.subscribe(counterSubscriber);\n// store.dispatch({action:'increment'});\n// store.dispatch({action:'decrement'});","map":{"version":3,"sources":["D:/dev/reactjs/Redux/redux-demo/src/store/index.js"],"names":["createStore","counterReducer","state","counter","action","type","amount","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;;AAEA,MAAMC,cAAc,GAAG,YAAgC;AAAA,MAA/BC,KAA+B,uEAAvB;AAACC,IAAAA,OAAO,EAAC;AAAT,GAAuB;AAAA,MAAVC,MAAU;;AACnD,MAAGA,MAAM,CAACC,IAAP,KAAc,WAAjB,EAA6B;AACzB,WAAM;AACFF,MAAAA,OAAO,EAACD,KAAK,CAACC,OAAN,GAAc;AADpB,KAAN;AAGH;;AACD,MAAGC,MAAM,CAACC,IAAP,KAAc,UAAjB,EAA4B;AACxB,WAAM;AACFF,MAAAA,OAAO,EAACD,KAAK,CAACC,OAAN,GAAcC,MAAM,CAACE;AAD3B,KAAN;AAGH;;AACD,MAAGF,MAAM,CAACC,IAAP,KAAc,WAAjB,EAA6B;AACzB,WAAM;AACFF,MAAAA,OAAO,EAACD,KAAK,CAACC,OAAN,GAAe;AADrB,KAAN;AAGH;;AACD,SAAOD,KAAP;AACH,CAjBD;;AAmBA,MAAMK,KAAK,GAAGP,WAAW,CAACC,cAAD,CAAzB;AAEA,eAAeM,KAAf,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import {createStore} from 'redux';\r\n\r\nconst counterReducer = (state = {counter:0}, action) =>{\r\n    if(action.type==='increment'){\r\n        return{\r\n            counter:state.counter+1\r\n        }\r\n    }\r\n    if(action.type==='increase'){\r\n        return{\r\n            counter:state.counter+action.amount\r\n        }\r\n    }\r\n    if(action.type==='decrement'){\r\n        return{\r\n            counter:state.counter -1,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n// const counterSubscriber = () =>{\r\n//     const latestState = store.getState();\r\n//     console.log(latestState);\r\n// }\r\n\r\n// store.subscribe(counterSubscriber);\r\n\r\n// store.dispatch({action:'increment'});\r\n// store.dispatch({action:'decrement'});"]},"metadata":{},"sourceType":"module"}