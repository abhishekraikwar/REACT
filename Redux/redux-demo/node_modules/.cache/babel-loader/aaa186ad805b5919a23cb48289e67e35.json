{"ast":null,"code":"import { createStore } from 'redux';\nimport { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'Counter',\n  initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    toggle(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === 'increment') {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'decrement') {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      counter: state.counter,\n      showCounter: !state.showCounter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store; // const counterSubscriber = () =>{\n//     const latestState = store.getState();\n//     console.log(latestState);\n// }\n// store.subscribe(counterSubscriber);\n// store.dispatch({action:'increment'});\n// store.dispatch({action:'decrement'});","map":{"version":3,"sources":["D:/dev/reactjs/Redux/redux-demo/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","increase","action","decrement","toggle","counterReducer","type","amount","store"],"mappings":"AAAA,SAAQA,WAAR,QAA0B,OAA1B;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAC,CAAT;AAAYC,EAAAA,WAAW,EAAC;AAAxB,CAArB;AAEAH,WAAW,CAAC;AACRI,EAAAA,IAAI,EAAC,SADG;AAERH,EAAAA,YAFQ;AAGRI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHI;;AAILM,IAAAA,QAAQ,CAACD,KAAD,EAAOE,MAAP,EAAe;AACnBF,MAAAA,KAAK,CAACL,OAAN,GAAgBK,KAAK,CAACL,OAAN,GAAgBO,MAAhC;AACH,KANI;;AAOLC,IAAAA,SAAS,CAACH,KAAD,EAAQ;AACbA,MAAAA,KAAK,CAACL,OAAN;AACH,KATI;;AAULS,IAAAA,MAAM,CAACJ,KAAD,EAAQ;AACVA,MAAAA,KAAK,CAACJ,WAAN,GAAkB,CAACI,KAAK,CAACJ,WAAzB;AACH;;AAZI;AAHD,CAAD,CAAX;;AAqBA,MAAMS,cAAc,GAAG,YAAiC;AAAA,MAAhCL,KAAgC,uEAAxBN,YAAwB;AAAA,MAAVQ,MAAU;;AACpD,MAAGA,MAAM,CAACI,IAAP,KAAc,WAAjB,EAA6B;AACzB,WAAM;AACFX,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAc,CADpB;AAEFC,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFhB,KAAN;AAIH;;AACD,MAAGM,MAAM,CAACI,IAAP,KAAc,UAAjB,EAA4B;AACxB,WAAM;AACFX,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAcO,MAAM,CAACK,MAD3B;AAEFX,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFhB,KAAN;AAIH;;AACD,MAAGM,MAAM,CAACI,IAAP,KAAc,WAAjB,EAA6B;AACzB,WAAM;AACFX,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAc,CADpB;AAEFC,MAAAA,WAAW,EAACI,KAAK,CAACJ;AAFhB,KAAN;AAIH;;AACD,MAAGM,MAAM,CAACI,IAAP,KAAc,QAAjB,EAA0B;AACtB,WAAM;AACFX,MAAAA,OAAO,EAACK,KAAK,CAACL,OADZ;AAEFC,MAAAA,WAAW,EAAC,CAACI,KAAK,CAACJ;AAFjB,KAAN;AAIH;;AACD,SAAOI,KAAP;AACH,CA1BD;;AA4BA,MAAMQ,KAAK,GAAGhB,WAAW,CAACa,cAAD,CAAzB;AAEA,eAAeG,KAAf,C,CAEA;AACA;AACA;AACA;AAEA;AAEA;AACA","sourcesContent":["import {createStore} from 'redux';\r\nimport {createSlice} from '@reduxjs/toolkit';\r\n\r\nconst initialState = {counter:0, showCounter:true};\r\n\r\ncreateSlice({\r\n    name:'Counter',\r\n    initialState,\r\n    reducers:{\r\n        increment(state){\r\n            state.counter++\r\n        },\r\n        increase(state,action) {\r\n            state.counter = state.counter + action;\r\n        },\r\n        decrement(state) {\r\n            state.counter--;\r\n        },\r\n        toggle(state) {\r\n            state.showCounter=!state.showCounter;\r\n        },\r\n\r\n    }\r\n\r\n  })\r\n\r\nconst counterReducer = (state = initialState, action) =>{\r\n    if(action.type==='increment'){\r\n        return{\r\n            counter:state.counter+1,\r\n            showCounter:state.showCounter,\r\n        }\r\n    }\r\n    if(action.type==='increase'){\r\n        return{\r\n            counter:state.counter+action.amount,\r\n            showCounter:state.showCounter,\r\n        }\r\n    }\r\n    if(action.type==='decrement'){\r\n        return{\r\n            counter:state.counter-1,\r\n            showCounter:state.showCounter,\r\n        }\r\n    }\r\n    if(action.type==='toggle'){\r\n        return{\r\n            counter:state.counter,\r\n            showCounter:!state.showCounter,\r\n        }\r\n    }\r\n    return state;\r\n}\r\n\r\nconst store = createStore(counterReducer);\r\n\r\nexport default store;\r\n\r\n// const counterSubscriber = () =>{\r\n//     const latestState = store.getState();\r\n//     console.log(latestState);\r\n// }\r\n\r\n// store.subscribe(counterSubscriber);\r\n\r\n// store.dispatch({action:'increment'});\r\n// store.dispatch({action:'decrement'});"]},"metadata":{},"sourceType":"module"}