{"ast":null,"code":"var _jsxFileName = \"D:\\\\dev\\\\reactjs\\\\Redux\\\\adv-redux\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './Store/ui-slice';\nimport Notification from './components/UI/Notification';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible);\n  const cart = useSelector(state => state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.ui.notification);\n  useEffect(() => {\n    const sendCartdata = async () => {\n      dispatch(uiActions.showNotification({\n        status: 'pending',\n        title: 'Sending...',\n        message: 'sending cart data...'\n      }));\n      const response = await fetch(\"https://react-http-80acb-default-rtdb.firebaseio.com/cart.json\", {\n        method: 'PUT',\n        body: JSON.stringify(cart)\n      });\n\n      if (!response.ok) {\n        throw new Error('Sending data to cart failed');\n      }\n\n      dispatch(uiActions.showNotification({\n        status: 'success',\n        title: 'Success!',\n        message: 'sentcart data...'\n      }));\n    };\n\n    sendCartdata().catch(error => {\n      dispatch(uiActions.showNotification({\n        status: 'error',\n        title: 'Failed',\n        message: 'Sending data failed'\n      }));\n    });\n  }, [cart, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [notification && /*#__PURE__*/_jsxDEV(Notification, {\n      status: notification.status,\n      title: notification.title,\n      message: notification.message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      children: [cartIsVisible && /*#__PURE__*/_jsxDEV(Cart, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(Products, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"XykhC2uMnfUHju6RS/WeYWFcK2g=\", false, function () {\n  return [useSelector, useSelector, useDispatch, useSelector];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/dev/reactjs/Redux/adv-redux/src/App.js"],"names":["useDispatch","useSelector","Fragment","useEffect","Cart","Layout","Products","uiActions","Notification","App","cartIsVisible","state","ui","cart","dispatch","notification","sendCartdata","showNotification","status","title","message","response","fetch","method","body","JSON","stringify","ok","Error","catch","error"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,aAAa,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,EAAN,CAASF,aAAnB,CAAjC;AACA,QAAMG,IAAI,GAAGZ,WAAW,CAACU,KAAK,IAAGA,KAAK,CAACE,IAAf,CAAxB;AACA,QAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAMe,YAAY,GAAGd,WAAW,CAACU,KAAK,IAAEA,KAAK,CAACC,EAAN,CAASG,YAAjB,CAAhC;AAEAZ,EAAAA,SAAS,CAAC,MAAK;AACb,UAAMa,YAAY,GAAG,YAAW;AAChCF,MAAAA,QAAQ,CAACP,SAAS,CAACU,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAC,SAD2B;AAElCC,QAAAA,KAAK,EAAC,YAF4B;AAGlCC,QAAAA,OAAO,EAAC;AAH0B,OAA3B,CAAD,CAAR;AAKA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gEAAD,EAAkE;AAC5FC,QAAAA,MAAM,EAAC,KADqF;AAE5FC,QAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeb,IAAf;AAFuF,OAAlE,CAA5B;;AAKA,UAAG,CAACQ,QAAQ,CAACM,EAAb,EAAgB;AACd,cAAM,IAAIC,KAAJ,CAAU,6BAAV,CAAN;AACD;;AAEDd,MAAAA,QAAQ,CAACP,SAAS,CAACU,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAC,SAD2B;AAElCC,QAAAA,KAAK,EAAC,UAF4B;AAGlCC,QAAAA,OAAO,EAAC;AAH0B,OAA3B,CAAD,CAAR;AAKD,KApBC;;AAqBFJ,IAAAA,YAAY,GAAGa,KAAf,CAAqBC,KAAK,IAAE;AAC1BhB,MAAAA,QAAQ,CAACP,SAAS,CAACU,gBAAV,CAA2B;AAClCC,QAAAA,MAAM,EAAC,OAD2B;AAElCC,QAAAA,KAAK,EAAC,QAF4B;AAGlCC,QAAAA,OAAO,EAAC;AAH0B,OAA3B,CAAD,CAAR;AAKD,KAND;AAOC,GA7BQ,EA6BP,CAACP,IAAD,EAAOC,QAAP,CA7BO,CAAT;AA+BA,sBACE,QAAC,QAAD;AAAA,eACGC,YAAY,iBAAE,QAAC,YAAD;AAAc,MAAA,MAAM,EAAIA,YAAY,CAACG,MAArC;AAA6C,MAAA,KAAK,EAAIH,YAAY,CAACI,KAAnE;AAA0E,MAAA,OAAO,EAAIJ,YAAY,CAACK;AAAlG;AAAA;AAAA;AAAA;AAAA,YADjB,eAEA,QAAC,MAAD;AAAA,iBACGV,aAAa,iBAAG,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA,cADnB,eAEE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA9CQD,G;UACeR,W,EACTA,W,EACID,W,EACIC,W;;;KAJdQ,G;AAgDT,eAAeA,GAAf","sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { Fragment, useEffect } from 'react';\nimport Cart from './components/Cart/Cart';\nimport Layout from './components/Layout/Layout';\nimport Products from './components/Shop/Products';\nimport { uiActions } from './Store/ui-slice';\nimport Notification from './components/UI/Notification';\n\nfunction App() {\n  const cartIsVisible = useSelector(state => state.ui.cartIsVisible)\n  const cart = useSelector(state =>state.cart);\n  const dispatch = useDispatch();\n  const notification = useSelector(state=>state.ui.notification);\n\n  useEffect(() =>{\n    const sendCartdata = async () =>{\n    dispatch(uiActions.showNotification({\n      status:'pending',\n      title:'Sending...',\n      message:'sending cart data...',\n    }))\n    const response = await fetch(\"https://react-http-80acb-default-rtdb.firebaseio.com/cart.json\",{\n      method:'PUT',\n      body:JSON.stringify(cart),\n    })\n  \n    if(!response.ok){\n      throw new Error('Sending data to cart failed');\n    }\n\n    dispatch(uiActions.showNotification({\n      status:'success',\n      title:'Success!',\n      message:'sentcart data...',\n    }))\n  }\n  sendCartdata().catch(error=>{\n    dispatch(uiActions.showNotification({\n      status:'error',\n      title:'Failed',\n      message:'Sending data failed',\n    }))\n  })\n  },[cart, dispatch]);\n\n  return (\n    <Fragment>\n      {notification&&<Notification status = {notification.status} title = {notification.title} message = {notification.message}></Notification>}\n    <Layout>\n      {cartIsVisible&& <Cart />}\n      <Products />\n    </Layout>\n    </Fragment>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}